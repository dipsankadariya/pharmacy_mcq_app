plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id("com.google.gms.google-services") // Apply the Google Services plugin
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace = "com.example.mcq_app"
    compileSdk = 34 // Ensure this is the latest version

    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8' // Ensure Kotlin targets Java 8
    }

    defaultConfig {
        applicationId = "com.example.mcq_app"
        minSdk = flutter.minSdkVersion.toInteger() // Ensure this is an integer
        targetSdk = 34 // Ensure this is the latest version
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            minifyEnabled true // Enable code shrinking and obfuscation
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = '../..'
}

dependencies {
    implementation(platform("com.google.firebase:firebase-bom:32.7.0")) // Update this
    implementation "com.google.firebase:firebase-analytics"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Ensure this is consistent
}